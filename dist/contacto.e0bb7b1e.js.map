{"mappings":"AAAA,uJAAuJ,GAEvJ,SAAS,uBAAuB,QAAQ;IACtC,IAAI,UAAU,aACZ,UAAU,YAAY,mBACpB,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE;QAClC,MAAM,SAAS;YACb,KAAK;YACL,KAAK;QACP;QACA,SAAS;IACX,GACA,CAAC;QACC,MACE,0EACE,MAAM;QAEV,SAAS,OAAO,oDAAoD;IACtE;SAEG;QACL,MAAM;QACN,SAAS,OAAO,sEAAsE;IACxF;AACF;AAEA,SAAS;IACP,MAAM,SAAS,SAAS,eAAe;IACvC,MAAM,oBAAoB,IAAI,OAAO,KAAK;IAE1C,uBAAuB,SAAU,YAAY;QAC3C,MAAM,MAAM,IAAI,OAAO,KAAK,IAAI,QAAQ;YACtC,MAAM;YACN,QAAQ,eAAe,eAAe;gBAAE,KAAK;gBAAW,KAAK;YAAW;QAC1E;QAEA,MAAM,gBAAgB,IAAI,OAAO,KAAK,OAAO;YAC3C,UAAU;gBAAE,KAAK;gBAAW,KAAK;YAAW;YAC5C,KAAK;YACL,MAAM;YACN,OAAO;QACT;QAEA,kDAAkD;QAClD,MAAM,aAAa,IAAI,OAAO,KAAK;QAEnC,oEAAoE;QACpE,cAAc,YAAY,SAAS;YACjC,WAAW;YACX,WAAW,WAAW,cAAc;YACpC,WAAW,KAAK,cAAc,UAAU;QAC1C;QAEA,IAAI,cAAc;YAChB,MAAM,qBAAqB,IAAI,OAAO,KAAK,mBAAmB;gBAC5D,KAAK;gBACL,iBAAiB;YACnB;YAEA,MAAM,eAAe,IAAI,OAAO,KAAK,OAAO;gBAC1C,KAAK;gBACL,UAAU;YACZ;YAEA,MAAM,UAAU;gBACd,QAAQ,aAAa;gBACrB,aAAa,cAAc;gBAC3B,YAAY,OAAO,KAAK,WAAW;YACrC;YAEA,kBAAkB,MAAM,SAAS,SAAU,MAAM,EAAE,MAAM;gBACvD,IAAI,WAAW,MAAM;oBACnB,QAAQ,IAAI,QAAQ;oBACpB,mBAAmB,cAAc;gBACnC;YACF;QACF;IACF;AACF","sources":["js/geolocation.js"],"sourcesContent":["/*Esta función obtiene la ubicación del usuario con un callback como parametro el cual obtendra la ubicación de cumplirse de lo contrara devolvera null*/\r\n\r\nfunction obtenerUbicacionActual(callback) {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        const coords = {\r\n          lat: latitude,\r\n          lng: longitude,\r\n        };\r\n        callback(coords);\r\n      },\r\n      (error) => {\r\n        alert(\r\n          \"Activar ubicación para mostrar ruta hacia nuestras instalaciones: \" +\r\n            error.message\r\n        );\r\n        callback(null); // Llama al callback con valor nulo en caso de error\r\n      }\r\n    );\r\n  } else {\r\n    alert(\"Geolocalización no soportada en este navegador\");\r\n    callback(null); // Llama al callback con valor nulo si no se admite la geolocalización\r\n  }\r\n}\r\n\r\nfunction initMap() {\r\n  const mapDiv = document.getElementById(\"mapDiv\");\r\n  const directionsService = new google.maps.DirectionsService();\r\n\r\n  obtenerUbicacionActual(function (userLocation) {\r\n    const map = new google.maps.Map(mapDiv, {\r\n      zoom: 12,\r\n      center: userLocation ? userLocation : { lat: 12.265139, lng: -86.563057 }, // Usa la ubicación actual si está disponible, de lo contrario, usa ubicación predeterminada\r\n    });\r\n\r\n    const destinoMarker = new google.maps.Marker({\r\n      position: { lat: 12.265139, lng: -86.563057 },\r\n      map: map,\r\n      icon: \"../img/logomarker.png\",\r\n      title: \"Calle 123 Paris\",\r\n    });\r\n\r\n    // Create an info window to share between markers.\r\n    const infoWindow = new google.maps.InfoWindow();\r\n\r\n    // Add a click listener for each marker, and set up the info window.\r\n    destinoMarker.addListener(\"click\", () => {\r\n      infoWindow.close();\r\n      infoWindow.setContent(destinoMarker.getTitle());\r\n      infoWindow.open(destinoMarker.getMap(), destinoMarker);\r\n    });\r\n\r\n    if (userLocation) {\r\n      const directionsRenderer = new google.maps.DirectionsRenderer({\r\n        map: map,\r\n        suppressMarkers: true,\r\n      });\r\n\r\n      const originMarker = new google.maps.Marker({\r\n        map: map,\r\n        position: userLocation,\r\n      });\r\n\r\n      const request = {\r\n        origin: originMarker.position,\r\n        destination: destinoMarker.position,\r\n        travelMode: google.maps.TravelMode.DRIVING,\r\n      };\r\n\r\n      directionsService.route(request, function (result, status) {\r\n        if (status === \"OK\") {\r\n          console.log(request.origin);\r\n          directionsRenderer.setDirections(result);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n"],"names":[],"version":3,"file":"contacto.e0bb7b1e.js.map","sourceRoot":"/__parcel_source_root/"}